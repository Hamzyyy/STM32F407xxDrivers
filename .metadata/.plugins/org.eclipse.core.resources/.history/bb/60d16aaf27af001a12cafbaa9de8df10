/*
 * 005spi_tx_test.c
 *
 *  Created on: June 15, 2020
 *      Author: Hamzy
 */
#include <string.h>
#include "stm32f407xx.h"


/*  Pin Configurations
 * PB12 ---> SPI2_NSS
 * PB13 ---> SPI2_SCK
 * PB14 ---> SPI2_MISO
 * PB15 ---> SPI2_MOSI
 * ALT Function = 5
 */

void SPI2_GPIOInits(void)
{
	GPIO_Handle_t spi_pin;

	spi_pin.pGPIOx = GPIOB;
	spi_pin.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
	spi_pin.GPIO_PinConfig.GPIO_PinAltFunMode = GPIO_AF5;
	spi_pin.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
	spi_pin.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
	spi_pin.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;

	// SPI2_NSS
	spi_pin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_12;
	GPIO_Init(&spi_pin);


	// SPI2_SCK
	spi_pin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_13;
	GPIO_Init(&spi_pin);

	// SPI2_MISO
	//spi_pin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_14;
	//GPIO_Init(&spi_pin);

	// SPI2_MOSI
	spi_pin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_15;
	GPIO_Init(&spi_pin);
}


void SPI2_Inits(void)
{
	SPI_Handle_t SPI2handle;

	//1. SPI base address
	SPI2handle.pSPIx = SPI2;

	SPI2handle.SPI_Config.SPI_BusConfig = SPI_BUS_CONFIG_FD;
	SPI2handle.SPI_Config.SPI_DeviceMode = SPI_DEVICE_MODE_MASTER;
	SPI2handle.SPI_Config.SPI_SCLKSpeed = SPI_SCLK_SPEED_DIV8; // SCLK = 8 MHz
	SPI2handle.SPI_Config.SPI_DFF = SPI_DFF_8BITS;
	SPI2handle.SPI_Config.SPI_CPOL = SPI_CPOL_LOW;
	SPI2handle.SPI_Config.SPI_CPHA = SPI_CPHA_LOW;
	SPI2handle.SPI_Config.SPI_SSM = SPI_SMM_DI; //Software slave select enable



	//3. Enable SP2
	SPI_Init(&SPI2handle);
}

void GPIO_ButtonInits(void)
{

	GPIO_Handle_t gpio_button;

	gpio_button.pGPIOx = GPIOA;
	// Pin configuration through your object from structure (Button PIN)
	gpio_button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_0;         //Button on PA0
	gpio_button.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;         //Button is input mode
	gpio_button.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;  // as already pull down in the schematic
	gpio_button.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;     // does not really matter


	GPIO_Init(&gpio_button);
}


void delay(void)
{
	for(uint32_t i = 0; i < (500000/2); i++);
}




int main(void)
{

	char user_data = "H";

	// Initialize the GPIO pins as SPI
	SPI2_GPIOInits();

	// Initialize the SPIs
	SPI2_Inits();


	// Initialize the a Button
	GPIO_ButtonInits();


	//Keeping the NSS pin high to avoid MODF
	//SPI_SSIConfig(SPI2, ENABLE);

	//disable multi master mode
	SPI_SSOEConfig(SPI2, ENABLE);

	while(1)
	{


			//only when button is pressed
			while( !( GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_0) ) );


			// small delay
			delay();

			//2. Enable the SPI peripheral
			SPI_PeripheralControl(SPI2, ENABLE);


			// the length of data

		    uint8_t dataLength = strlen(user_data);

			SPI_SendData(SPI2, &dataLength, 1);

			// sending data
			SPI_SendData(SPI2, (uint8_t *) user_data, strlen(user_data));


			// As long as SPI busy dont shut down
			while ( SPI_GetSPIstatus(SPI2, SPI_BUSY_FLAG) );

			//2. Disable the SPI peripheral
			SPI_PeripheralControl(SPI2, DISABLE);
	}
	return 0;
}
